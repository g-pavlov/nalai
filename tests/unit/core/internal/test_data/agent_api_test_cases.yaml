# Test cases for agent API operations
# Following the existing pattern of data-driven tests in the codebase

create_conversation_cases:
  - name: "create_new_conversation_success"
    description: "Successfully create a new conversation"
    input:
      request:
        messages: [{"content": "Hello", "type": "human", "status": null}]
        model_config:
          platform: "ollama"
          model: "llama3.2"
      user_id: "user123"
      user_context: "mock_context"
    expected:
      success: true
      conversation_id: "conv_pattern"
      output:
        messages: [{"content": "Hello", "type": "ai", "status": null}]
        selected_apis: []
        cache_miss: null
      streaming: false

  - name: "create_conversation_with_empty_messages"
    description: "Create conversation with empty message list"
    input:
      request:
        messages: []
        model_config:
          platform: "ollama"
          model: "llama3.2"
      user_id: "user123"
      user_context: "mock_context"
    expected:
      success: true
      conversation_id: "conv_pattern"
      output:
        messages: []
        selected_apis: []
        cache_miss: null
      streaming: false

continue_conversation_cases:
  - name: "continue_existing_conversation_success"
    description: "Successfully continue an existing conversation"
    input:
      request:
        messages: [{"content": "Continue please", "type": "human", "status": null}]
        model_config:
          platform: "ollama"
          model: "llama3.2"
      conversation_id: "conv_2b1c3d4e5f6g7h8i9j2k3m4n5p6q7r8s9"
      user_id: "user123"
      user_context: "mock_context"
    expected:
      success: true
      conversation_id: "conv_2b1c3d4e5f6g7h8i9j2k3m4n5p6q7r8s9"
      output:
        messages: [{"content": "I'll continue", "type": "ai", "status": null}]
        selected_apis: []
        cache_miss: null
      streaming: false

  - name: "continue_conversation_access_denied"
    description: "Access denied when continuing conversation owned by different user"
    input:
      request:
        messages: [{"content": "Continue please", "type": "human", "status": null}]
        model_config:
          platform: "ollama"
          model: "llama3.2"
      conversation_id: "conv_2b1c3d4e5f6g7h8i9j2k3m4n5p6q7r8s9"
      user_id: "user456"
      user_context: "mock_context"
    expected:
      success: false
      error_type: "AccessDeniedError"
      error_message: "Access denied to conversation"

  - name: "continue_conversation_invalid_uuid"
    description: "Validation error for invalid conversation ID format"
    input:
      request:
        messages: [{"content": "Continue please", "type": "human", "status": null}]
        model_config:
          platform: "ollama"
          model: "llama3.2"
      conversation_id: "invalid-conv-id"
      user_id: "user123"
      user_context: "mock_context"
    expected:
      success: false
      error_type: "ValidationError"
      error_message: "Invalid conversation ID format"

load_conversation_cases:
  - name: "load_conversation_success"
    description: "Successfully load existing conversation"
    input:
      conversation_id: "conv_2b1c3d4e5f6g7h8i9j2k3m4n5p6q7r8s9"
      user_id: "user123"
      user_context: "mock_context"
    expected:
      success: true
      conversation_id: "conv_2b1c3d4e5f6g7h8i9j2k3m4n5p6q7r8s9"
      messages:
        - {"content": "Hello", "type": "human", "status": null}
        - {"content": "Hi there!", "type": "ai", "status": null}
      metadata: {"title": "Test conversation"}
      status: "active"

  - name: "load_conversation_not_found"
    description: "Conversation not found"
    input:
      conversation_id: "conv_abc123def456ghi789jkm2n3p4q5r6s7t8u9"
      user_id: "user123"
      user_context: "mock_context"
    expected:
      success: false
      error_type: "ConversationNotFoundError"
      error_message: "Conversation not found"

  - name: "load_conversation_interrupted_status"
    description: "Load conversation with interrupted status"
    input:
      conversation_id: "conv_xyz789abc123def456ghi789jkm2n3p4q5r6s7t8u9"
      user_id: "user123"
      user_context: "mock_context"
    expected:
      success: true
      conversation_id: "conv_xyz789abc123def456ghi789jkm2n3p4q5r6s7t8u9"
      status: "interrupted"

delete_conversation_cases:
  - name: "delete_conversation_success"
    description: "Successfully delete conversation"
    input:
      conversation_id: "conv_2b1c3d4e5f6g7h8i9j2k3m4n5p6q7r8s9"
      user_id: "user123"
      user_context: "mock_context"
    expected:
      success: true
      conversation_id: "conv_2b1c3d4e5f6g7h8i9j2k3m4n5p6q7r8s9"
      deleted: true

  - name: "delete_conversation_not_found"
    description: "Conversation not found for deletion"
    input:
      conversation_id: "conv_abc123def456ghi789jkm2n3p4q5r6s7t8u9"
      user_id: "user123"
      user_context: "mock_context"
    expected:
      success: false
      error_type: "ConversationNotFoundError"
      error_message: "Conversation not found"

list_conversations_cases:
  - name: "list_conversations_success"
    description: "Successfully list user conversations"
    input:
      user_id: "user123"
      user_context: "mock_context"
    expected:
      success: true
      conversations:
        - conversation_id: "550e8400-e29b-41d4-a716-446655440000"
          created_at: "2024-01-01T10:00:00"
          last_updated: "2024-01-01T10:30:00"
          preview: "Hello there!"
          metadata: {"title": "Test conversation"}
      total_count: 1

  - name: "list_conversations_empty"
    description: "List conversations for user with no conversations"
    input:
      user_id: "user456"
      user_context: "mock_context"
    expected:
      success: true
      conversations: []
      total_count: 0

resume_decision_cases:
  - name: "resume_decision_accept"
    description: "Successfully resume with accept decision"
    input:
      request:
        input:
          decision: "accept"
          message: "Tool call accepted"
      conversation_id: "conv_2b1c3d4e5f6g7h8i9j2k3m4n5p6q7r8s9"
      user_id: "user123"
      user_context: "mock_context"
    expected:
      success: true
      conversation_id: "conv_2b1c3d4e5f6g7h8i9j2k3m4n5p6q7r8s9"
      output:
        messages: [{"content": "Tool call accepted", "type": "ai", "status": null}]
        selected_apis: []
        cache_miss: null
      streaming: false

  - name: "resume_decision_reject"
    description: "Successfully resume with reject decision"
    input:
      request:
        input:
          decision: "reject"
          message: "I don't want to execute this tool"
      conversation_id: "conv_2b1c3d4e5f6g7h8i9j2k3m4n5p6q7r8s9"
      user_id: "user123"
      user_context: "mock_context"
    expected:
      success: true
      conversation_id: "conv_2b1c3d4e5f6g7h8i9j2k3m4n5p6q7r8s9"
      output:
        messages: [{"content": "Tool call rejected", "type": "ai", "status": null}]
        selected_apis: []
        cache_miss: null
      streaming: false

# Test cases for select_relevant_apis functionality
select_relevant_apis:
  - name: "single_api_selection"
    description: "Select a single relevant API"
    input:
      messages: [{"content": "I need to get user information", "type": "human", "status": null}]
      api_summaries: [
        {"title": "User API", "version": "v1", "description": "Get user information"},
        {"title": "Product API", "version": "v2", "description": "Manage products"},
        {"title": "Order API", "version": "v1", "description": "Handle orders"}
      ]
    expected:
      selected_apis: [{"api_title": "User API", "api_version": "v1"}]
      messages_count: 1

  - name: "no_relevant_apis"
    description: "No APIs are relevant to the request"
    input:
      messages: [{"content": "Hello, how are you?", "type": "human", "status": null}]
      api_summaries: [
        {"title": "User API", "version": "v1", "description": "Get user information"},
        {"title": "Product API", "version": "v2", "description": "Manage products"},
        {"title": "Order API", "version": "v1", "description": "Handle orders"}
      ]
    expected:
      selected_apis: []
      messages_count: 1

# Test cases for determine_workflow_action functionality
determine_workflow_action:
  - name: "tool_calls_present"
    description: "Messages contain tool calls"
    input:
      messages: [
        {"content": "Get user info", "type": "human", "status": null},
        {"content": "I'll get that for you", "type": "ai", "status": null, "tool_calls": [{"name": "get_user", "args": {"id": "123"}, "id": "call_123"}]}
      ]
    expected: "call_api"

  - name: "no_tool_calls"
    description: "Messages contain no tool calls"
    input:
      messages: [
        {"content": "Hello", "type": "human", "status": null},
        {"content": "Hi there!", "type": "ai", "status": null}
      ]
    expected: "__end__"

  - name: "empty_messages"
    description: "Empty message list"
    input:
      messages: []
    expected: "__end__"

# Test cases for determine_next_step functionality
determine_next_step:
  - name: "with_selected_apis"
    description: "Continue with selected APIs"
    input:
      selected_apis: [{"api_title": "User API", "api_version": "v1"}]
      messages: [{"content": "Get user info", "type": "human", "status": null}]
    expected: "load_api_specs"

  - name: "no_selected_apis"
    description: "No APIs selected, continue with model response"
    input:
      selected_apis: []
      messages: [{"content": "Hello", "type": "human", "status": null}]
    expected: "call_model"

  - name: "none_selected_apis"
    description: "None value for selected APIs"
    input:
      selected_apis: null
      messages: [{"content": "Hello", "type": "human", "status": null}]
    expected: "call_model"
